"use strict";(self.webpackChunkappShellStore=self.webpackChunkappShellStore||[]).push([[963],{963:(t,e,n)=>{n.r(e),n.d(e,{default:()=>a});var o=n(207),s=n.n(o),r=n(457);const a=s()((0,r.lt)((function(t){return{count:0,increment:function(){return t((function(t){return{count:t.count+1}}))},decrement:function(){return t((function(t){return{count:t.count-1}}))}}})))},457:(t,e,n)=>{n.d(e,{lt:()=>r});const o=new Map,s=t=>{const e=o.get(t);return e?Object.fromEntries(Object.entries(e.stores).map((([t,e])=>[t,e.getState()]))):{}},r=(t,e={})=>(n,r,i)=>{const{enabled:c,anonymousActionType:l,store:d,...u}=e;let p;try{p=(null==c||c)&&window.__REDUX_DEVTOOLS_EXTENSION__}catch(t){}if(!p)return c&&console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension"),t(n,r,i);const{connection:v,...f}=((t,e,n)=>{if(void 0===t)return{type:"untracked",connection:e.connect(n)};const s=o.get(n.name);if(s)return{type:"tracked",store:t,...s};const r={connection:e.connect(n),stores:{}};return o.set(n.name,r),{type:"tracked",store:t,...r}})(d,p,u);let y=!0;i.setState=(t,e,o)=>{const a=n(t,e);if(!y)return a;const c=void 0===o?{type:l||"anonymous"}:"string"==typeof o?{type:o}:o;return void 0===d?(null==v||v.send(c,r()),a):(null==v||v.send({...c,type:`${d}/${c.type}`},{...s(u.name),[d]:i.getState()}),a)};const S=(...t)=>{const e=y;y=!1,n(...t),y=e},h=t(i.setState,r,i);if("untracked"===f.type?null==v||v.init(h):(f.stores[f.store]=i,null==v||v.init(Object.fromEntries(Object.entries(f.stores).map((([t,e])=>[t,t===f.store?h:e.getState()]))))),i.dispatchFromDevtools&&"function"==typeof i.dispatch){let t=!1;const e=i.dispatch;i.dispatch=(...n)=>{"__setState"!==n[0].type||t||(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),t=!0),e(...n)}}return v.subscribe((t=>{var e;switch(t.type){case"ACTION":return"string"!=typeof t.payload?void console.error("[zustand devtools middleware] Unsupported action format"):a(t.payload,(t=>{if("__setState"!==t.type)i.dispatchFromDevtools&&"function"==typeof i.dispatch&&i.dispatch(t);else{if(void 0===d)return void S(t.state);1!==Object.keys(t.state).length&&console.error('\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using \'store\' option in devtools(), the \'state\' should have only one key, which is a value of \'store\' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }\n                    ');const e=t.state[d];if(null==e)return;JSON.stringify(i.getState())!==JSON.stringify(e)&&S(e)}}));case"DISPATCH":switch(t.payload.type){case"RESET":return S(h),void 0===d?null==v?void 0:v.init(i.getState()):null==v?void 0:v.init(s(u.name));case"COMMIT":return void 0===d?void(null==v||v.init(i.getState())):null==v?void 0:v.init(s(u.name));case"ROLLBACK":return a(t.state,(t=>{if(void 0===d)return S(t),void(null==v||v.init(i.getState()));S(t[d]),null==v||v.init(s(u.name))}));case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return a(t.state,(t=>{void 0!==d?JSON.stringify(i.getState())!==JSON.stringify(t[d])&&S(t[d]):S(t)}));case"IMPORT_STATE":{const{nextLiftedState:n}=t.payload,o=null==(e=n.computedStates.slice(-1)[0])?void 0:e.state;if(!o)return;return S(void 0===d?o:o[d]),void(null==v||v.send(null,n))}case"PAUSE_RECORDING":return y=!y}return}})),h},a=(t,e)=>{let n;try{n=JSON.parse(t)}catch(t){console.error("[zustand devtools middleware] Could not parse the received json",t)}void 0!==n&&e(n)}}}]);